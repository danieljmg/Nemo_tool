from z3 import *
def embeed(constraints):
    Nfa = BitVec('Nfa', 3)
    Nfb = BitVec('Nfb', 3)
    Nfc = BitVec('Nfc', 3)
    Nfd = BitVec('Nfd', 3)
    Nff = BitVec('Nff', 4)
    Fa = Bool('Fa')
    constraints.add(Nfa >= 0)
    constraints.add(Nfa <= 1)
    constraints.add(Nfb >= -2)
    constraints.add(Nfb <= 1)
    constraints.add(Nfc > -4)
    constraints.add(Nfd >= -4)
    constraints.add(Nfd <= 3)
    constraints.add(Or(Nff == -1, Nff == 3, Nff == 5))
    constraints.add(Nfa*(Nfb + Nfc) >= Nfd)
    constraints.add(And(Nff == -1, Nff != 3))
    constraints.add(Not(Fa))