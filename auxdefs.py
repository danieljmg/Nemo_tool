from z3 import *
def embeed(constraints):
    NFa = BitVec('NFa', 3)
    NFb = BitVec('NFb', 3)
    NFc = BitVec('NFc', 3)
    NFd = BitVec('NFd', 3)
    NFe = BitVec('NFe', 4)
    NFf = BitVec('NFf', 4)
    Fa = Bool('Fa')
    constraints.add(NFa >= 0)
    constraints.add(NFa <= 1)
    constraints.add(NFb >= -2)
    constraints.add(NFb <= 1)
    constraints.add(NFc > -4)
    constraints.add(NFd >= -4)
    constraints.add(NFd <= 3)
    constraints.add(NFe == -5)
    constraints.add(Or(NFf == -1, NFf == 3, NFf == 5))
    constraints.add(NFa*(NFb + NFc) >= NFd)
    constraints.add(Implies(Fa, NFa == 1))